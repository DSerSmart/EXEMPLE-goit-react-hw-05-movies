{"version":3,"file":"static/js/346.d1804b97.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","page/Movie/Movie.jsx","service/Api.js"],"sourcesContent":["export const MovieCard = ({ title, id }) => {\n  return <>{title}</>;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Link } from './MovieList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ collection }) => {\n  const location = useLocation();\n  const prevURL = location.pathname === '/' ? '/movie/' : '';\n  return (\n    <>\n      <ul>\n        {collection.map(movie => (\n          <li key={movie.id}>\n            <Link to={`${prevURL}${movie.id}`} state={{ from: location }}>\n              <MovieCard title={movie.title} id={movie.id} />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid #000;\n`;\n\nexport const InputText = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import { SearchForm, SearchButton, InputText } from './SearchBar.styled';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { Formik } from 'formik';\n\nconst initialValues = {\n  query: '',\n};\nexport const Searchbar = ({ onSubmit }) => {\n  const handleSubmit = (value, { resetForm }) => {\n    if (value.query.trim() === '') {\n      return;\n    }\n    onSubmit(value.query);\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <SearchForm>\n        <SearchButton type=\"submit\">\n          <BiSearchAlt />\n        </SearchButton>\n\n        <InputText name=\"query\" type=\"text\" />\n      </SearchForm>\n    </Formik>\n  );\n};\n","import { Searchbar } from 'components/SearchBar/SearchBar';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovies } from 'service/Api';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const q = searchParams.get('query') ?? '';\n  const [moviesCollection, setmoviesCollection] = useState([]);\n\n  useEffect(() => {\n    if (q) {\n      getSearchMovies(q).then(data => setmoviesCollection(data.results));\n    }\n  }, [q]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={q => updateQueryString(q)} />\n      <MovieList collection={moviesCollection} />\n      <Outlet />\n    </div>\n  );\n};\nexport default Movie;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst userKey = '6fe1e9d5fbaeb01db6cc1b91ad7172fe';\n\nexport const getTrendingMovies = async (page = 1) => {\n  try {\n    const url = `3/trending/movie/day?api_key=${userKey}&page=${page}`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSearchMovies = async (searchQuery, page = 1) => {\n  try {\n    const url = `3/search/movie?api_key=${userKey}&language=en-US&query=${searchQuery}&page=${page}&include_adult=false`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMoviesByID = async movieID => {\n  try {\n    const url = `3/movie/${movieID}?api_key=${userKey}&language=en-US`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCastByID = async movieID => {\n  try {\n    const url = `3/movie/${movieID}/credits?api_key=${userKey}&language=en-US`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviewsByID = async movieID => {\n  try {\n    const url = `3/movie/${movieID}/reviews?api_key=${userKey}&language=en-US`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["MovieCard","title","id","Link","styled","NavLink","MovieList","collection","location","useLocation","prevURL","pathname","map","movie","to","state","from","SearchForm","Form","InputText","Field","SearchButton","initialValues","query","Searchbar","onSubmit","value","resetForm","trim","type","name","useSearchParams","searchParams","setSearchParams","q","get","useState","moviesCollection","setmoviesCollection","useEffect","getSearchMovies","then","data","results","axios","userKey","getTrendingMovies","page","url","response","console","log","searchQuery","getMoviesByID","movieID","getMovieCastByID","getMovieReviewsByID"],"sourceRoot":""}